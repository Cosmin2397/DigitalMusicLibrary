@page "/"
@using DigitalMusicLibrary.Models
@using DigitalMusicLibrary.Services
@inject IArtistService ArtistService
@rendermode InteractiveServer

<div class="container mt-4">
    <div class="text-center">
        <h1 class="mb-3">Digital Music Library</h1>
    </div>
    <div class="input-group mb-3">
        <input @bind="searchTerm" @oninput="OnSearchInput" class="form-control" placeholder="Search for artists, albums, or songs..." />
        <button class="btn btn-dark" @onclick="OnSearchButtonClick">Search</button>
    </div>

    @if (searchResults.Any())
    {
        @foreach (var artist in searchResults)
        {
            <div class="card mb-4">
                <div class="card-header bg-dark text-white">
                    <h3>@artist.Name</h3>
                </div>
                <div class="card-body">
                    @foreach (var album in artist.Albums)
                    {
                        <div class="mb-3">
                            <h4 class="mb-2">Album title: @album.Title</h4>
                            <p class="mb-2">Description: @album.Description</p>
                            <button class="btn btn-sm btn-outline-dark mb-2" @onclick="() => ToggleAlbumSongs(album)">
                                @(album.ShowSongs ? "Hide Songs" : "Show Songs")
                            </button>
                            @if (album.ShowSongs)
                            {
                                <div class="table-responsive">
                                    <table class="table table-striped table-hover">
                                        <thead>
                                            <tr>
                                                <th>Title</th>
                                                <th>Length</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var song in album.Songs)
                                            {
                                                <tr>
                                                    <td>@song.Title</td>
                                                    <td>@song.Length</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        }
    }
    else
    {
        <div class="alert alert-info">No results found. Try a different search term.</div>
    }
</div>

@code {
    private string searchTerm;
    private List<Artist> searchResults = new List<Artist>();

    protected override async Task OnInitializedAsync()
    {
        searchResults = await ArtistService.SearchAsync(searchTerm);
    }

    private async Task OnSearchInput(ChangeEventArgs e)
    {
        searchTerm = e.Value.ToString();
    }

    private async Task OnSearchButtonClick()
    {
        searchResults = await ArtistService.SearchAsync(searchTerm);
    }

    private void ToggleAlbumSongs(Album album)
    {
        album.ShowSongs = !album.ShowSongs;
    }
}